var e=require("@hotwired/stimulus");class t extends e.Controller{get input(){return this.element.querySelector("input[type=file]")}run(e){this.upload(e.target.files),e.target.value=""}upload(e){this.input.disabled=!0,e=Array.from(e),this.before(e),Promise.all(Array.from(e).map((e,t)=>this.uploadFile(e,t))).then(()=>{this.after(e),this.input.disabled=!1})}uploadFile(e,t){return new Promise(r=>{this.start(e,t),fetch(this.urlValue,Object.assign({method:this.methodValue,body:this.buildFormData(e)},this.constructor.fetchOptions,this.fetchOptionsValue)).then(r=>{r.ok?this.done(e,t,r):this.fail(e,t,r)}).catch(r=>{this.fail(e,t,r)}).then(()=>{this.end(e,t),r()})})}before(e){this.hasProgressTarget&&e.forEach((e,t)=>{this.progressTarget.append(this.createProgress(e,t))}),this.dispatch("before",{detail:{files:e}})}after(e){this.dispatch("after",{detail:{files:e}})}start(e,t){this.dispatch("start",{detail:{file:e,index:t}})}done(e,t,r){this.dispatch("done",{detail:{file:e,index:t,response:r}})}fail(e,t,r){this.dispatch("fail",{detail:{file:e,index:t,error:r}})}end(e,t){if(this.hasProgressTarget){var r=this.findProgress(t);r&&r.remove()}this.dispatch("end",{detail:{file:e,index:t}})}createProgress(e,t,r){void 0===r&&(r="...");var s=document.createElement("div");s.innerHTML=this.constructor.template;var a=s.firstChild;return a.setAttribute("data-uploader-index",t),a.querySelector(".st-uploader__progress-name").innerHTML=e.name,a.querySelector(".st-uploader__progress-value").innerHTML=r,a}findProgress(e){return this.progressTarget.querySelector('[data-uploader-index="'+e+'"]')}buildFormData(e){var t=new FormData;t.append(this.input.name,e);var r=Object.assign({},this.constructor.resolveParams(this.constructor.params),this.constructor.resolveParams(this.paramsValue));for(var s in r)t.append(s,r[s]);return t}static resolveParams(e){var t={};switch(Object.prototype.toString.call(e)){case"[object Function]":t=e();break;case"[object Array]":e.forEach(e=>{t[e.name]=e.value});break;case"[object Object]":Object.assign(t,e)}return t}}t.targets=["progress"],t.values={url:String,method:{type:String,default:"post"},params:{type:Object,default:{}},fetchOptions:{type:Object,default:{}}},t.params={},t.fetchOptions={},t.template='<div class="st-uploader__progress"><span class="st-uploader__progress-name"></span><span class="st-uploader__progress-value"></span></div>',module.exports=t;
//# sourceMappingURL=index.js.map

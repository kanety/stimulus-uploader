{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import { Controller } from '@hotwired/stimulus';\nimport './index.scss';\n\nexport default class extends Controller {\n  static targets = ['progress'];\n  static values = {\n    url: String,\n    method: { type: String, default: 'post' },\n    params: { type: Object, default: {} },\n    fetchOptions: { type: Object, default: {} }\n  };\n\n  static params = {};\n  static fetchOptions = {};\n  static template = '<div class=\"st-uploader__progress\">' +\n    '<span class=\"st-uploader__progress-name\"></span>' +\n    '<span class=\"st-uploader__progress-value\"></span>' +\n    '</div>';\n\n  get input() {\n    return this.element.querySelector('input[type=file]');\n  }\n\n  run(e) {\n    this.upload(e.target.files);\n    e.target.value = '';\n  }\n\n  upload(files) {\n    this.input.disabled = true;\n\n    files = Array.from(files);\n    this.before(files);\n\n    Promise.all(\n      Array.from(files).map((file, i) => this.uploadFile(file, i))\n    ).then(() => {\n      this.after(files);\n      this.input.disabled = false;\n    });\n  }\n\n  uploadFile(file, index) {\n    return new Promise(resolve => {\n      this.start(file, index);\n\n      fetch(this.urlValue, Object.assign({\n        method: this.methodValue,\n        body: this.buildFormData(file),\n        }, this.constructor.fetchOptions, this.fetchOptionsValue)\n      ).then(response => {\n        if (response.ok) {\n          this.done(file, index, response);\n        } else {\n          this.fail(file, index, response);\n        }\n      }).catch(error => {\n        this.fail(file, index, error);\n      }).then(() => {\n        this.end(file, index);\n        resolve();\n      });\n    });\n  }\n\n  before(files) {\n    if (this.hasProgressTarget) {\n      files.forEach((file, index) => {\n        this.progressTarget.append(this.createProgress(file, index));\n      });\n    }\n\n    this.dispatch('before', { detail: { files: files } });\n  }\n\n  after(files) {\n    this.dispatch('after', { detail: { files: files } });\n  }\n\n  start(file, index) {\n    this.dispatch('start', { detail: { file: file, index: index } });\n  }\n\n  done(file, index, response) {\n    this.dispatch('done', { detail: { file: file, index: index, response: response } });\n  }\n\n  fail(file, index, error) {\n    this.dispatch('fail', { detail: { file: file, index: index, error: error } });\n  }\n\n  end(file, index) {\n    if (this.hasProgressTarget) {\n      let progress = this.findProgress(index);\n      if (progress) progress.remove();\n    }\n    this.dispatch('end', { detail: { file: file, index: index } });\n  }\n\n  createProgress(file, index, value = '...') {\n    var tmp = document.createElement('div');\n    tmp.innerHTML = this.constructor.template;\n    let node = tmp.firstChild;\n    node.setAttribute('data-uploader-index', index)\n    node.querySelector('.st-uploader__progress-name').innerHTML = file.name;\n    node.querySelector('.st-uploader__progress-value').innerHTML = value;\n    return node;\n  }\n\n  findProgress(index) {\n    return this.progressTarget.querySelector(`[data-uploader-index=\"${index}\"]`);\n  }\n\n  buildFormData(file) {\n    let data = new FormData();\n    data.append(this.input.name, file);\n\n    let params = Object.assign({},\n      this.constructor.resolveParams(this.constructor.params),\n      this.constructor.resolveParams(this.paramsValue)\n    );\n    for (let key in params) {\n      data.append(key, params[key]);\n    }\n    return data;\n  }\n\n  static resolveParams(params) {\n    let data = {}\n\n    switch (Object.prototype.toString.call(params)) {\n      case '[object Function]':\n        data = params();\n        break;\n      case '[object Array]':\n      params.forEach((item)=> {\n        data[item.name] = item.value;\n      });\n      break;\n    case '[object Object]':\n      Object.assign(data, params);\n      break;\n    }\n\n    return data;\n  }\n}\n"],"names":["Controller","input","element","querySelector","run","e","this","upload","target","files","value","disabled","Array","from","before","Promise","all","map","file","i","uploadFile","then","after","index","resolve","start","fetch","urlValue","Object","assign","method","methodValue","body","buildFormData","constructor","fetchOptions","fetchOptionsValue","response","ok","done","fail","catch","error","end","hasProgressTarget","forEach","progressTarget","append","createProgress","dispatch","detail","progress","findProgress","remove","tmp","document","createElement","innerHTML","template","node","firstChild","setAttribute","name","data","FormData","params","resolveParams","paramsValue","key","static","prototype","toString","call","item","targets","values","url","String","type","default"],"mappings":"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"}